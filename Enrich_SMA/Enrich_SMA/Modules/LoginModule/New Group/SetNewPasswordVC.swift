//
//  SetNewPasswordViewController.swift
//  Enrich_TMA
//
//  Created by Harshal Patil on 18/11/19.
//  Copyright (c) 2019 e-zest. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SetNewPasswordDisplayLogic: class
{
    func displaySomething(viewModel: SetNewPassword.Something.ViewModel)
}

class SetNewPasswordVC: UIViewController, SetNewPasswordDisplayLogic
{
    var interactor: SetNewPasswordBusinessLogic?
    
    @IBOutlet weak var txtFNewPassword: CustomTextField!
    @IBOutlet weak var btnSubmit: UIButton!
    @IBOutlet weak var iconImage: UIImageView!
    
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = SetNewPasswordInteractor()
        let presenter = SetNewPasswordPresenter()
        viewController.interactor = interactor
        interactor.presenter = presenter
        presenter.viewController = viewController
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        //    if let scene = segue.identifier {
        //      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
        //      if let router = router, router.responds(to: selector) {
        //        router.perform(selector, with: segue)
        //      }
        //    }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        doSomething()
        
        txtFNewPassword.delegate = self
        [txtFNewPassword].forEach({ $0.addTarget(self, action: #selector(editingChanged), for: .editingChanged) })
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        self.navigationController?.navigationBar.isHidden = false
        AppDelegate.OrientationLock.lock(to: UIInterfaceOrientationMask.portrait, andRotateTo: UIInterfaceOrientation.portrait)
        self.navigationController?.addCustomBackButton(title: "")
        KeyboardAnimation.sharedInstance.beginKeyboardObservation(self.view)
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewDidDisappear(animated)
        self.navigationController?.navigationBar.isHidden = false
        KeyboardAnimation.sharedInstance.endKeyboardObservation()
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func doSomething()
    {
        let request = SetNewPassword.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: SetNewPassword.Something.ViewModel)
    {
        //nameTextField.text = viewModel.name
    }
    
    @IBAction func actionSubmit(_ sender: UIButton) {
        self.navigationController?.popToRootViewController(animated: true)
    }
    
}


extension SetNewPasswordVC: UITextFieldDelegate {
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        textField.resignFirstResponder()
        return true
    }
    
    func textFieldShouldEndEditing(_ textField: UITextField) -> Bool {
        textField.resignFirstResponder()
        return true
    }
}

extension SetNewPasswordVC {
    
    @objc func editingChanged(_ textField: UITextField) {
        btnSubmit.isEnabled = false
        iconImage.image = UIImage(named: ImageNames.disabledLogo.rawValue)
        let newPassword = txtFNewPassword.text!.trim()
        if !newPassword.isEmpty {
            self.btnSubmit.isEnabled = true
            iconImage.image = UIImage(named: ImageNames.enabledLogo.rawValue)
        }
    }
}
